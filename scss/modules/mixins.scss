@import './variable.scss';

@mixin display($property) {
    display: $property;
}

@mixin flex-property($justify,$align) {
    justify-content: $justify;
    align-items: $align;
}

@mixin t-transform($t-transform) {
    text-transform: $t-transform;
}

@mixin t-decoration($t-decoration) {
    text-decoration: $t-decoration;
}

@mixin position($position) {
    position: $position;
}


// @mixin font-face($style-name, $file, $family, $category:"") {
//     $filepath: "fonts/" + $family + "/" + $file;
//     @font-face {
//         font-family: "#{$style-name}";
//         src: url($filepath + ".eot");
//         src: url($filepath + ".eot?#iefix") format('embedded-opentype'), url($filepath + ".woff") format('woff'), url($filepath + ".ttf")  format('truetype'), url($filepath + ".svg#" + $style-name + "") format('svg');
//     }
//     %#{$style-name} {
//         font: {
//             @if $category != "" {
//                 family: "#{$style-name}", #{$category};
//             }
//             @else {
//                 family: "#{$style-name}";
//                 weight: normal;
//             }
//         }
//     }
// }


@mixin flexLeft($direction) {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: $direction;
}

@mixin flex($justify) {
    display: flex;
    align-items: center;
    justify-content: $justify;
}

@mixin mobile {
    @media (max-width: $mobile) {
        @content;
    }
}


@mixin transition-ease {
    transition: all 0.5s ease-in-out;
  }

  @function fontsize($fontsize-name) {
    @return map-get($font-sizes, $fontsize-name);
}

// use:
// font-size: fontsize(text-s);